{"version":3,"sources":["components/navbar.jsx","components/params.jsx","data/dndclasses.js","components/character.jsx","App.jsx","index.js"],"names":["Navbar","className","Params","useState","encountersPerDay","encountersPerShortRest","roundsPerEncounter","enemiesHitAoe","state","setState","updateInput","event","field","preventDefault","newState","merge","target","value","htmlFor","type","min","max","onChange","e","id","dndClasses","subclasses","Character","class","subclass","level","classOptions","map","name","i","key","subclassOptions","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bb2ce82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-container\">\r\n            <header>{`D&D 5E Damage Visualization Tool`}</header>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport {merge} from 'lodash';\r\n\r\nconst Params = () => {\r\n\r\n    const [state, setState] = useState({\r\n        encountersPerDay: 6,\r\n        encountersPerShortRest: 2,\r\n        roundsPerEncounter: 4,\r\n        enemiesHitAoe: 4\r\n    });\r\n\r\n    const updateInput = (event, field) => {\r\n        event.preventDefault();\r\n        const newState = merge({}, state);\r\n        newState[field] = event.target.value;\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n        <section className=\"params-container\">\r\n\r\n            <label htmlFor=\"encounterPerDaySlider\">Encounters per Day</label>\r\n            <input \r\n                type=\"range\" \r\n                min=\"1\" max=\"10\" \r\n                value={state.encountersPerDay} \r\n                onChange={e => updateInput(e,\"encountersPerDay\")}\r\n                id=\"encounterPerDaySlider\"\r\n            ></input>\r\n\r\n            <label htmlFor=\"encounterPerShortRest\">Encounters per Short Rest</label>\r\n            <input \r\n                type=\"range\" \r\n                min=\"1\" max=\"10\" \r\n                value={state.encountersPerShortRest}\r\n                onChange={e => updateInput(e,\"encountersPerShortRest\")}\r\n                id=\"encounterPerShortRest\"\r\n            ></input>\r\n\r\n            <label htmlFor=\"roundsPerEncounter\">Average Encounter Length (in Rounds)</label>\r\n            <input \r\n                type=\"range\" \r\n                min=\"1\" max=\"10\" \r\n                value={state.roundsPerEncounter}\r\n                onChange={e => updateInput(e,\"roundsPerEncounter\")}\r\n                id=\"roundsPerEncounter\"\r\n            ></input>\r\n\r\n            <label htmlFor=\"enemiesHitAoe\">Average Number of Enemies Hit by AoE</label>\r\n            <input \r\n                type=\"range\" \r\n                min=\"1\" max=\"20\" \r\n                value={state.enemiesHitAoe}\r\n                onChange={e => updateInput(e,\"enemiesHitAoe\")}\r\n                id=\"enemiesHitAoe\"\r\n            ></input>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Params;","export const dndClasses = [\"Artificer\", \"Barbarian\", \"Bard\", \"Cleric\", \"Druid\", \"Fighter\", \"Monk\", \"Paladin\", \"Ranger\", \"Rogue\", \"Sorcerer\", \"Warlock\", \"Wizard\"];\r\nexport const subclasses = {\r\n    \"Artificer\": [\"Alchemist\", \"Arterialist\", \"Battle Smith\"],\r\n    \"Barbarian\": [\"Ancestral Guardian\", \"Berserker\", \"Storm Herald\", \"Totem Warrior\", \"Zealot\"],\r\n    \"Bard\": [\"Glamour\", \"Lore\", \"Swords\", \"Valor\", \"Whispers\"],\r\n    \"Cleric\": [\"Arcana\", \"Death\", \"Forge\", \"Grave\", \"Knowledge\", \"Life\", \"Light\", \"Nature\", \"Order\", \"Tempest\", \"Trickery\", \"War\"],\r\n    \"Druid\": [\"Dreams\", \"Land\", \"Moon\", \"Shepherd\", \"Spores\"],\r\n    \"Fighter\": [\"Arcane Archer\", \"Banneret\", \"Battle Master\", \"Cavalier\", \"Champion\", \"Eldritch Knight\", \"Samurai\"],\r\n    \"Monk\": [\"Drunken Master\", \"Four Elements\", \"Kensei\", \"Long Death\", \"Open Hand\", \"Shadow\", \"Sun Soul\"],\r\n    \"Paladin\": [\"Ancients\", \"Conquest\", \"Crown\", \"Devotion\", \"Redemption\", \"Vengeance\"],\r\n    \"Ranger\": [\"Beast Master\", \"Gloom Stalker\", \"Horizon Walker\", \"Hunter\", \"Monster Slayer\"],\r\n    \"Rogue\": [\"Arcane Trickster\", \"Assassin\", \"Inquisitive\", \"Mastermind\", \"Scout\", \"Swashbuckler\"],\r\n    \"Sorcerer\": [\"Draconic Bloodline\", \"Divine Soul\", \"Phoenix Sorcery\", \"Shadow Magic\", \"Storm Sorcery\", \"Wild Magic\"],\r\n    \"Warlock\": [\"Archfey\", \"Celestial\", \"Fiend\", \"Great Old One\", \"Hexblade\", \"Undying\"],\r\n    \"Wizard\": [\"Abjuration\", \"Bladesinging\", \"Conjuration\", \"Divination\", \"Enchantment\", \"Evocation\", \"Illusion\", \"Necromancy\", \"Transmutation\", \"War Magic\"]\r\n};","import React, {useState} from 'react';\r\nimport {dndClasses, subclasses} from '../data/dndclasses';\r\nimport {merge} from 'lodash';\r\n\r\nconst Character = () => {\r\n\r\n    const [state, setState] = useState({\r\n        class: \"Artificer\",\r\n        subclass: \"Alchemist\",\r\n        level: 3\r\n    });\r\n\r\n    const updateInput = (event, field) => {\r\n        event.preventDefault();\r\n        const newState = merge({}, state);\r\n        newState[field] = event.target.value;\r\n        if (field == 'class') {newState['subclass'] = subclasses[event.target.value][0]}\r\n        setState(newState);\r\n    }\r\n\r\n    const classOptions = dndClasses.map( (name,i) => {\r\n        return <option value={name} key={i}>{name}</option>\r\n    });\r\n\r\n    const subclassOptions = subclasses[state.class].map( (name,i) => {\r\n        return <option value={name} key={i}>{name}</option>\r\n    });\r\n\r\n    return (\r\n        <section className=\"character-container\">\r\n\r\n            <label htmlFor=\"levelInput\">Level</label>\r\n            <input \r\n                type=\"number\" \r\n                min=\"1\" max=\"20\" \r\n                value={state.level} \r\n                onChange={e => updateInput(e,\"level\")}\r\n                id=\"levelInput\"\r\n            ></input>\r\n\r\n            <label htmlFor=\"classSelect\">Class</label>\r\n            <select \r\n                id=\"classSelect\"\r\n                value={state.class}\r\n                onChange={e => updateInput(e, 'class')}\r\n            >\r\n                {classOptions}\r\n            </select>\r\n\r\n            <label htmlFor=\"subclassSelect\">Subclass</label>\r\n            <select \r\n                id=\"subclassSelect\"\r\n                value={state.subclass}\r\n                onChange={e => updateInput(e, 'subclass')}\r\n            >\r\n                {subclassOptions}\r\n            </select>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Character;","import React from 'react';\r\nimport Navbar from './components/navbar';\r\nimport Params from './components/params';\r\nimport Character from './components/character';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Navbar/>\r\n      <Character />\r\n      <Params />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}